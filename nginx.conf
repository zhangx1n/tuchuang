
user  root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    # file max 10M
    client_max_body_size 10m;
    #gzip  on;
	server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

		index index.html index.htm default.htm default.html;
        #root /home/liaoqingfu/tc-front;
        root /root/tuchuang/0voice_tuchuang/tc-front;

		autoindex off;

		#access_log  logs/host.access.log  main;
        # 指定允许跨域的方法，*代表所有
        add_header Access-Control-Allow-Methods *;

        # 预检命令的缓存，如果不缓存每次会发送两次请求
        add_header Access-Control-Max-Age 3600;
        # 带cookie请求需要加上这个字段，并设置为true
        add_header Access-Control-Allow-Credentials true;

        # 表示允许这个域跨域调用（客户端发送请求的域名和端口）
        # $http_origin动态获取请求客户端请求的域   不用*的原因是带cookie的请求不支持*号
        add_header Access-Control-Allow-Origin $http_origin;

        # 表示请求头的字段 动态获取
        add_header Access-Control-Allow-Headers
        $http_access_control_request_headers;

		#charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root /root/tuchuang/0voice_tuchuang/tc-front;
			index  index.html index.htm;
			try_files $uri $uri/ /index.html;
        }
		location ~/group([0-9])/M([0-9])([0-9]) {     
			ngx_fastdfs_module;
		}	

		location /api/login{
			proxy_pass http://127.0.0.1:8081;
		}
		
		location /api/reg{
			proxy_pass   http://127.0.0.1:8081;
		}

		location /api2/upload{
			proxy_pass http://127.0.0.1:8081;
		}

		location /api/md5{
			proxy_pass http://127.0.0.1:8081;
		}

		location /api/myfiles{
			proxy_pass http://127.0.0.1:8081;
		}

		location /api/dealfile{
			proxy_pass http://127.0.0.1:8081;
		}

		location /api/sharefiles{
			proxy_pass http://127.0.0.1:8081;
		}
		location /api/dealsharefile{
			proxy_pass http://127.0.0.1:8081;
		}

		location /api/sharepic{
			proxy_pass http://127.0.0.1:8081;
		}


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

		location /api/upload {
            # Pass altered request body to this location
            upload_pass   @api_upload;

            # Store files to this directory
            # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
            upload_store /root/tmp 1;

            # Allow uploaded files to be read only by user
            upload_store_access user:r;

            # Set specified fields in request body
            upload_set_form_field "${upload_field_name}_name" $upload_file_name;
            upload_set_form_field "${upload_field_name}_content_type" $upload_content_type;
            upload_set_form_field "${upload_field_name}_path" $upload_tmp_path;

            # Inform backend about hash and size of a file
            upload_aggregate_form_field "${upload_field_name}_md5" $upload_file_md5;
            upload_aggregate_form_field "${upload_field_name}_size" $upload_file_size;
			#upload_pass_form_field "^.*";  
			upload_pass_form_field "^user";  # 把user字段也传递给后端解析处理
            #upload_pass_form_field "^submit$|^description$";
        }

        # Pass altered request body to a backend
        location @api_upload {
            #return 200;
            proxy_pass   http://127.0.0.1:8081;
        }

	}
    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
